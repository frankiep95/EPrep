package com.example.eprep.controller;

import java.util.Optional;

import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.SessionAttributes;
import org.springframework.web.bind.support.SessionStatus;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.example.eprep.dao.UserRepository;
import com.example.eprep.model.Users;


@Controller
@SessionAttributes({"loggedInUser","role"})
public class LoginController {
	
	 private UserRepository userRepository;
	@GetMapping("name-{fname}-{lname}")
	public String name(Model model,@PathVariable String lname, @PathVariable String fname) {
		model.addAttribute("msg","<h3> You Entered " + fname +" "+ lname+"</h3>");
		return "home";
	}
	@PostMapping("login")
	public String login(RedirectAttributes redirect, Model model, @RequestParam String email, @RequestParam String password) {
		Optional<Users> user= userRepository.login(email, password);
		
		if(user.isPresent()) {
			model.addAttribute("loggedInUser", email);
			model.addAttribute("role", user.get().getRole());
		}else {
			redirect.addFlashAttribute("error","Invalid Credentials");
			return "redirect:/login";
		}
		return"redirect:/profile";
	}
	//map request to update profile
	@PostMapping("updatemyinfo")
	public String updateMyInfo(@ModelAttribute Users user,RedirectAttributes red) {
		userRepository.findById(user.getId()).ifPresent(u->{
			u.setFname(user.getFname());
			u.setLname(user.getLname());
			userRepository.save(u);
			red.addFlashAttribute("success","Update Success Thank you!");
			
		});
		return "redirect:profile";
	}
	
//	 @GetMapping("profile") 
//	  String profile(@SessionAttributes(required = false) String loggedInuser, Model model) {
//	     try {
//	    	 //if user is not in session return login page expired session
//			if(loggedInuser.isEmpty() && loggedInuser !=null) {
//			 model.addAttribute("error", "Expired session, please Login");
//			"login"; 
//			 }
//			//populate user details from database 
//			userRepository.findByEmail(loggedInuser).ifPresent(a->{
//			 model.addAttribute("user_account", a);
//				 
//			 });
//			model.addAttribute("page", "Profile");
//		} catch (Exception e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		} 
//	  return "profile";
//	 }

	@GetMapping("logout")
	public String logout(Model model, SessionStatus status, HttpSession session) {
		//status.setComplete();
		session.invalidate();
		model.addAttribute("loggedInUser", "");
		model.addAttribute("role", "");
		Users user=new Users();
		model.addAttribute("user", user);
		model.addAttribute("msg","You have Been logged Out");
		
		return "login";
	}
}
